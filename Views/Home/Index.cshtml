@model FileUploadModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    
    <div class="upload-container">
        <form asp-controller="Home" asp-action="Index" method="post" enctype="multipart/form-data">
            <div class="mb-1">
                <label asp-for="Name">Your Name:</label>
                <br />
                <input asp-for="Name" type="text" />
                <br />
                <span id="error-name" asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="mb-1">
                <label asp-for="Files">Select files:</label>
                <br />
                <input asp-for="Files" name="Files" type="file" class="form-control" accept="image/*, video/*" multiple />
                <span id="error-files" asp-validation-for="Files" class="text-danger"></span>
            </div>            
            <button type="submit" class="btn btn-primary m-1">Upload</button>
        </form>

        <div id="progress-bar-container" style="width: 100%; background-color:gray">
            <div id="progress-bar" style="width: 0%; height: 30px; background-color: green;"></div>
        </div>

    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        let errorName = document.getElementById("error-name");
        let errorFiles = document.getElementById("error-files");

        let progressBar = document.getElementById("progress-bar");

        $(function () {
            $('form').submit(function (e) {
                e.preventDefault();

                errorName.innerHTML = "";
                errorFiles.innerHTML = "";

                var formData = new FormData($(this)[0]);

                if (UploadInvalid(formData))
                    return;

                $.ajax({
                    url: '@Url.Action("Index", "Home")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        var xhr = new XMLHttpRequest();

                        xhr.upload.onprogress = function (e) {
                            if (e.lengthComputable) {
                                var percent = parseInt((e.loaded / e.total) * 100);
                                progressBar.style.width = percent + "%";
                                console.log(percent);
                            }
                        };

                        return xhr;
                    },
                    success: function () {
                        // Handle success
                        // window.location.href = '@(@Url.Action("UploadSuccess", "Home"))';
                    },
                    error: function () {
                        // Handle error
                    }
                });
            });
        });

        function UploadInvalid(formData) {
            let isInvalid = false;

            //Check name is not null
            var nameFieldValue = $('input[name="Name"]').val();
            if (!nameFieldValue) {
                errorName.innerHTML = "Please enter a name. FromJS"
                isInvalid = true;
            }

            //Check if filesize is too large
            var totalFileSize = 0;
            // Calculate total file size
            formData.forEach(function (value, key) {
                if (value instanceof File) {
                    totalFileSize += value.size;
                }
            });

            // Set a maximum allowed file size (in bytes)
            var maxFileSize = 3145728000; // 3GB

            if (totalFileSize == 0) {
                errorFiles.innerHTML = "Please add some files. FromJS"
                isInvalid = true;
            }
            else if (totalFileSize > maxFileSize) {
                // Display an error message or take appropriate action
                errorFiles.innerHTML = "The maximum filesize upload exceeded. FromJS"
                isInvalid = true;
            }

            return isInvalid;
        }

        function UpdateProgressBar(percent) {

        }
    </script> 

</div>
